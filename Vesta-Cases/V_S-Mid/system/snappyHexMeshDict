/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;

mergeTolerance 1e-6;

// Geometry. Definition of all surfaces. All surfaces are of class
// searchableSurface.
// Surfaces are used
// - to specify refinement for any mesh cell intersecting it
// - to specify refinement for any mesh cell inside/outside/near
// - to 'snap' the mesh boundary to the surface
geometry
{
    building.obj
    {
        type triSurfaceMesh;
        name building;
    }

    spoiler.obj
    {
        type triSurfaceMesh;
        name spoiler;
    }

    spoilerRefinement
	{
		type searchableBox; //Covers 1 meter infront and behind spoiler, 2 meters above and below, and 1 meter to either side
		min (-2 12.029 54.5);
		max (3.5 17.029 68.5);
	}

};

// Settings for the castellatedMesh generation.
castellatedMesh true;
snap true;
addLayers true;

castellatedMeshControls
{
	maxLocalCells 500000;
    	maxGlobalCells 10000000;
    	minRefinementCells 10;
    	nCellsBetweenLevels 5;
	resolveFeatureAngle 30;
   	 features
   	 (
       	 {
            file "building.eMesh";
            level 3;
      	  }

	  {
            file "spoiler.eMesh";
            level 3;
      	  }
 	   );
	// Surface based refinement
    	// ~~~~~~~~~~~~~~~~~~~~~~~~
	
  	  // Specifies two levels for every surface. The first is the minimum level,
  	 // every cell intersecting a surface gets refined up to the minimum level.
   	 // The second level is the maximum level. Cells that 'see' multiple
  	  // intersections where the intersections make an
   	 // angle > resolveFeatureAngle get refined up to the maximum level.

    	refinementSurfaces
  	  {
        building
      	  {
            // Surface-wise min and max refinement level. CHANGED for ease
            level (3 3);
           }

	spoiler
      	  {
            // Surface-wise min and max refinement level. CHANGED for ease
            level (4 4);
           }

	  }

	refinementRegions
  	  {
		spoilerRefinement
		{
			mode inside;
			levels ((1e15 2));
		}
          }
	planarAngle 30;
	allowFreeStandingZoneFaces true;
	locationInMesh (0 60 30);
};


  

// Settings for the snapping.
snapControls
{
    // Number of patch smoothing iterations before finding correspondence
    //  to surface
    nSmoothPatch 10;

    // Relative distance for points to be attracted by surface feature point
    //  or edge. True distance is this factor times local
    //  maximum edge length.
    tolerance 1.0;

    // Number of mesh displacement relaxation iterations.
    nSolveIter 100;
    nRelaxIter 10;
   
    nFeatureSnapIter 100;
};

addLayersControls
{
	relativeSizes true;

  	  layers
  	  {
     	   spoiler
		{nSurfaceLayers 25;}

     	   building
		{nSurfaceLayers 15;}

	   bottom 
		{nSurfaceLayers 10;}
	  }
     
   

    expansionRatio 1.15;
    finalLayerThickness 0.4;
    minThickness 0.00001
    nGrow 1;

    featureAngle 130;
    nRelaxIter 5;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedianAxisAngle 130;
    nBufferCellsNoExtrude 0;
    nLayerIter 60;
    minMedialAxisAngle 80;
    slipFeatureAngle 30;
};

meshQualityControls
{
    maxNonOrtho 75;
    maxBoundarySkewness 4;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality -1e-30;
    minArea -1e-1;
    minTwist 0.02;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;

    // Advanced: limit maximum cells with bad quality
    nSmoothScale 4;
    errorReduction 0.75;
};

